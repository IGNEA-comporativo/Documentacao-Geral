## üî∑ Login

O componente **Login** √© respons√°vel pela autentica√ß√£o inicial do usu√°rio. Ele apresenta um formul√°rio simples com campo de **senha** (obrigat√≥rio) e um campo de **email** (desabilitado, marcado como ‚Äúcoming soon‚Äù). Em caso de sucesso, o usu√°rio √© redirecionado para a rota **`AreaDeTrabalho`**.


### üîπ Workflow
1. **Entrada de credenciais**: o usu√°rio informa a **senha** (campo obrigat√≥rio). O campo **email** est√° presente, por√©m **desabilitado**.
2. **Submiss√£o**: ao enviar o formul√°rio, o componente entra em estado **carregando**, bloqueia intera√ß√µes redundantes e dispara a tentativa de autentica√ß√£o via **Axios** (prefixo `/api` herdado do plugin).
3. **Resposta do backend**:
   - **Sucesso (2xx)** ‚Üí navega√ß√£o program√°tica para **`AreaDeTrabalho`**.
   - **Falha (ex.: 401)** ‚Üí mensagem de erro vis√≠vel e **anima√ß√£o de ‚Äúshake‚Äù** para refor√ßo de feedback.
4. **Recupera√ß√£o de estado**: em qualquer falha, o estado de carregamento √© desativado e o usu√°rio pode tentar novamente.


### üîπ Vari√°veis do modelo 
| Estado     | Tipo    | Uso principal                                                                   |
| ---------- | ------- | ------------------------------------------------------------------------------- |
| `email`    | String  | Mantido para futura evolu√ß√£o do login. **Desabilitado** na UI atual.            |
| `password` | String  | Credencial ativa de autentica√ß√£o; campo obrigat√≥rio.                            |
| `loading`  | Boolean | Indica requisi√ß√£o em andamento; desabilita o bot√£o de envio e mostra progresso. |
| `error`    | String  | Mensagem de erro apresentada ao usu√°rio (ex.: ‚ÄúSenha inv√°lida.‚Äù).               |
| `shake`    | Boolean | Controla a aplica√ß√£o de anima√ß√£o visual no cart√£o em caso de falha.             |

> Esses estados s√£o suficientes para orquestrar envio, feedback e transi√ß√µes visuais sem depend√™ncias adicionais.

--- 
### üîπ Contrato com o backend
- **Endpoint**: `POST /api/login` *(prefixo `/api` fornecido pelo plugin do Axios)*  
- **Payload**: `{ password: string }`  
- **Respostas esperadas**:
  - **2xx**: autentica√ß√£o bem-sucedida ‚Üí navega√ß√£o para `AreaDeTrabalho`.
  - **401**: credencial inv√°lida ‚Üí mensagem ‚ÄúSenha inv√°lida.‚Äù e anima√ß√£o de erro.
  - **Demais erros**: mensagem gen√©rica ‚ÄúErro inesperado. Tente novamente.‚Äù  


---

### üîπM√©todos

#### üî∏`onSubmit() -> Promise<void>`
> **Descri√ß√£o**  
> M√©todo respons√°vel pelas a√ß√µes feitas ao submeter a tentativa de login. 
> - Orquestra o envio das credenciais
> - Controla os estados de UI (**loading**, **error**, **shake**)
> - Realiza a chamada ao backend e, em caso de sucesso, navega para a rota **`AreaDeTrabalho`**
>
>
>**Par√¢metros**  
> *(nenhum par√¢metro expl√≠cito; o m√©todo consome o estado local `password`)*
>
>**Retorno**  
>`Promise<void>`
>
>**Comportamento**  
>1. Limpa erro anterior e ativa `loading`.
>2. Executa `POST /api/login` com `{ password }` via Axios (plugin).
	>1. Em **2xx**: navega para `AreaDeTrabalho`.
	>2. Em **401**: define mensagem **‚ÄúSenha inv√°lida.‚Äù**, ativa `shake`, desativa `loading`.
>3. Em qualquer outra falha: mensagem gen√©rica, `shake`, desativa `loading`.
>
>**Uso**  
>Formul√°rio com `@submit.prevent="onSubmit"`; bot√£o de envio desabilitado quando `loading` √© verdadeiro e exibindo spinner padr√£o.
